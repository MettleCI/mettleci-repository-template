#   ___                      ______ _            _ _
#  / _ \                     | ___ (_)          | (_)
# / /_\ \_____   _ _ __ ___  | |_/ /_ _ __   ___| |_ _ __   ___  ___
# |  _  |_  / | | | '__/ _ \ |  __/| | '_ \ / _ \ | | '_ \ / _ \/ __|
# | | | |/ /| |_| | | |  __/ | |   | | |_) |  __/ | | | | |  __/\__ \
# \_| |_/___|\__,_|_|  \___| \_|   |_| .__/ \___|_|_|_| |_|\___||___/
#                                    | |
#                                    |_|
# -------------------------------------------------------------------
# MettleCI - DevOps for DataStage
# (C)2020-2023 Data Migrators Pty Ltd
# This Azure DevOps pipeline is unsuported and is provided only as a 
# practical example of how to use the MettleCI Command Line Interface 
# -------------------------------------------------------------------

trigger: 
  batch: true
  branches:
    include: 
    - hotfix/*
  paths:
    exclude:
    - "*.yml"

#
# Project-related variables
#
variables:
  - name: BaseIISProjectName
    value: <BASE_PROJECT_NAME>
  - name: ComplianceRepoName
    value: <COMPLIANCE_REPOSITORY_NAME>
  - name: ComplianceFatalTags
    value: 'fail-ci'
  - name: PS_SpecialHandling
    value: true

# Define a Resouce reference to your Compliance Rule Repository
#   Unfortunately Azure DevOps doesn't let us use variables in the name of resources
#   so the name property of the Compliance repository (defined below) should match the
#   value property of your ComplianceRepoName variable above.
resources:
 repositories:
 - repository: Compliance
   type: git
   name: <COMPLIANCE_REPOSITORY_NAME>


stages:

#------------------------------------------------------------------------------
# Deploy to the Hotfix CI project in preparation for CI testing
#------------------------------------------------------------------------------
- stage: Deploy_HF_CI
  variables:
    - group: <NONPROD_VARIABLE_GROUP>
    - name: EnvID
      value: "hf_ci"
    - name: Datastage_Project
      value: ${{ variables.BaseIISProjectName }}_${{ variables.EnvID }}

  pool:
    name: <AGENT_POOL_NAME>
    demands:
    - MettleCI.CLI
    - DataStage.Version -equals 11.7

  jobs:
  - template: /pipelines/azure/templates/deploy-template.yml
    parameters:
      DomainName: $(IISDomainName)
      EngineName: $(IISEngineName)
      EnvironmentID: ${{ variables.EnvID }}
      EnvironmentName: DevOps - Hotfix Continuous Integration
      DatastageProject: ${{ variables.Datastage_Project }}
      ProjectCacheDir: $(AgentMettleHome)\cache\$(IISEngineName)\${{ variables.Datastage_Project }}
      IISUsername: $(IISUsername)
      IISPassword: $(IISPassword)
      MCIUsername: $(MCIUsername)
      MCIPassword: $(MCIPassword)
      PublishCompilationTests: true
      mettlecicmd: $(AgentMettleCmd)
      MettleHomeDir: $(AgentMettleHome)
      UpdateDSParams: false
      PSSpecialHandling: ${{ variables.PS_SpecialHandling }}
      AlternateJavaPath: $(AgentMettleAltJavaPath)

#------------------------------------------------------------------------------
# Execute Compliance and Unit tests 
#------------------------------------------------------------------------------
- stage: Test_HF_CI

  variables:
    - group: <NONPROD_VARIABLE_GROUP>
    - name: EnvID
      value: "hf_ci"
    - name: Datastage_Project
      value: ${{ variables.BaseIISProjectName }}_${{ variables.EnvID }}

  pool:
    name: <AGENT_POOL_NAME>
    demands:
    - MettleCI.CLI
    - DataStage.Version -equals 11.7

  jobs:
  - template: /pipelines/azure/templates/compliance-template.yml
    parameters:
      ProjectName: ${{ variables.BaseIISProjectName }}
      ComplianceSuite: CI WARN
      ComplianceRepoName: ${{ variables.ComplianceRepoName }}
      SourceRepoName: $(Build.Repository.Name)
      IncludeTags: ''
      ExcludeTags: ${{ variables.ComplianceFatalTags }}
      ContinueOnError: true
      mettlecicmd: $(AgentMettleCmd)
      ProjectCacheDir: $(AgentMettleHome)\cache\$(IISEngineName)\${{ variables.Datastage_Project }}
      AlternateJavaPath: $(AgentMettleAltJavaPath)

  - template: /pipelines/azure/templates/compliance-template.yml
    parameters:
      ProjectName: ${{ variables.BaseIISProjectName }}
      ComplianceSuite: CI FATAL
      ComplianceRepoName: ${{ variables.ComplianceRepoName }}
      SourceRepoName: $(Build.Repository.Name)
      IncludeTags: ${{ variables.ComplianceFatalTags }}
      ExcludeTags: ''
      ContinueOnError: false
      mettlecicmd: $(AgentMettleCmd)
      ProjectCacheDir: $(AgentMettleHome)\cache\$(IISEngineName)\${{ variables.Datastage_Project }}
      AlternateJavaPath: $(AgentMettleAltJavaPath)

  - template: /pipelines/azure/templates/unittest-template.yml
    parameters:
      DomainName: $(IISDomainName)
      EngineName: $(IISEngineName)
      EnvironmentID: ${{ variables.EnvID }}
      EnvironmentName: CI
      DatastageProject: ${{ variables.Datastage_Project }}
      ProjectCacheDir: $(AgentMettleHome)\cache\$(IISEngineName)\${{ variables.Datastage_Project }}
      MCIUsername: $(MCIUsername)
      MCIPassword: $(MCIPassword)
      IISUsername: $(IISUsername)
      IISPassword: $(IISPassword)
      mettlecicmd: $(AgentMettleCmd)
      unittestpath: $(EngineUnitTestBaseDir)
      AlternateJavaPath: $(AgentMettleAltJavaPath)

  - job:
    displayName: 'Tag Release Candidate'
    dependsOn: 
    - Compliance_Test_CI_WARN
    - Compliance_Test_CI_FATAL
    - Unit_Test_CI
    steps:
    - checkout: self
      persistCredentials: true
    - script: |
        echo ##vso[build.addbuildtag]${{ variables.EnvID }}
      displayName: 'Tag ${{ variables.EnvID }} deploy'  
    - script: |
        rem Assuming you're using the default YYYYMMDD.nn build naming,
        rem get the revision number (up to 4 digits) for this pipeline run...
        set MyRevision=%BUILD_BUILDNUMBER:~9,4%
        echo This pipeline run (%BUILD_BUILDNUMBER%) is revision %MyRevision%
        rem
        rem Get the YYYYMMDD.nn part of our branch name by removing 'hf.''
        set BuildSourceNumber=%BUILD_SOURCEBRANCHNAME:hf.=%
        rem
        rem Build our commit tag value 'ENVID.YYYYMMDD.nn.revision'
        set TagValue=%ENVID%.%BuildSourceNumber%.%MyRevision%
        echo Tag value is %TagValue%
        rem
        rem Tag the commit and push
        echo Git user.name %BUILD_REQUESTEDFOR%
        echo Git user.email %BUILD_REQUESTEDFOREMAIL%
        echo Tag %TagValue%
        git config --global user.name %BUILD_REQUESTEDFOR%
        git config --global user.email %BUILD_REQUESTEDFOREMAIL%
        git tag -a "%TagValue%" -m "MettleCI hotfix deployed to %ENVID%"
        git push origin "%TagValue%"
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Tag Git commit'  

#------------------------------------------------------------------------------
# Deploy to Production
# (subject to that environment's configured 'Approvals and Checks')
#------------------------------------------------------------------------------
- stage: Deploy_PROD
  variables:
    - group: <PROD_VARIABLE_GROUP>
    - name: EnvID
      value: "prod"
    - name: Datastage_Project
      value: ${{ variables.BaseIISProjectName }}_${{ variables.EnvID }}

  pool:
    name: <AGENT_POOL_NAME>
    demands:
    - MettleCI.CLI
    - DataStage.Version -equals 11.7

  jobs:
  - template: /pipelines/azure/templates/deploy-template.yml
    parameters:
      DomainName: $(IISDomainName)
      EngineName: $(IISEngineName)
      EnvironmentID: ${{ variables.EnvID }}
      EnvironmentName: DevOps - Production
      DatastageProject: ${{ variables.Datastage_Project }}
      ProjectCacheDir: $(AgentMettleHome)\cache\$(IISEngineName)\${{ variables.Datastage_Project }}
      IISUsername: $(IISUsername)
      IISPassword: $(IISPassword)
      MCIUsername: $(MCIUsername)
      MCIPassword: $(MCIPassword)
      PublishCompilationTests: true
      mettlecicmd: $(AgentMettleCmd)
      MettleHomeDir: $(AgentMettleHome)
      UpdateDSParams: false
      PSSpecialHandling: ${{ variables.PS_SpecialHandling }}
      AlternateJavaPath: $(AgentMettleAltJavaPath)

  - job:
    displayName: 'Tag Production Release'
    dependsOn: 
    - Deploy_${{ variables.EnvID }}
    steps:
    - checkout: self
      persistCredentials: true
    - script: |
        echo ##vso[build.addbuildtag]${{ variables.EnvID }}
      displayName: 'Tag ${{ variables.EnvID }} deploy'  
    - script: |
        set MyRevision=%BUILD_BUILDNUMBER:~9,4%
        echo This pipeline run (%BUILD_BUILDNUMBER%) is revision %MyRevision%
        set BuildSourceNumber=%BUILD_SOURCEBRANCHNAME:hf.=%
        set TagValue=%ENVID%.%BuildSourceNumber%.%MyRevision%
        echo Tag value is %TagValue%
        echo Git user.name %BUILD_REQUESTEDFOR%
        echo Git user.email %BUILD_REQUESTEDFOREMAIL%
        echo Tag %TagValue%
        git config --global user.name %BUILD_REQUESTEDFOR%
        git config --global user.email %BUILD_REQUESTEDFOREMAIL%
        git tag -a "%TagValue%" -m "MettleCI hotfix deployed to %ENVID%"
        git push origin "%TagValue%"
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Tag Git commit'  

